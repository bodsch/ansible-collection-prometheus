---

- name: create download directory
  become: false
  delegate_to: "{{ nginx_exporter_delegate_to }}"
  run_once: "{{ 'false' if nginx_exporter_direct_download else 'true' }}"
  ansible.builtin.file:
    path: "{{ nginx_exporter_local_tmp_directory }}"
    state: directory
    mode: 0750

- name: detect the downloaded nginx_exporter archive
  become: false
  delegate_to: "{{ nginx_exporter_delegate_to }}"
  run_once: "{{ 'false' if nginx_exporter_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ nginx_exporter_local_tmp_directory }}/{{ nginx_exporter_release.file }}"
  register: stat_nginx_exporter_archive

- name: download
  when:
    - stat_nginx_exporter_archive.stat is defined
    - not stat_nginx_exporter_archive.stat.exists | default('false')
  block:
    - name: checksum
      become: false
      delegate_to: localhost
      run_once: true
      block:
        - name: get checksum list
          bodsch.scm.github_checksum:
            project: nginxinc
            repository: nginx-prometheus-exporter
            checksum_file: sha256sums.txt
            user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
            password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
            architecture: "{{ ansible_architecture }}"
            system: "{{ ansible_facts.system }}"
            version: "v{{ nginx_exporter_version }}"
          register: _latest_checksum

        - name: define checksum for {{ system_architecture }} architecture
          ansible.builtin.set_fact:
            __nginx_exporter_checksum: "sha256:{{
              _latest_checksum.checksums |
                bodsch.prometheus.parse_checksum('nginx-prometheus-exporter', ansible_facts.system, system_architecture ) }}"
          when:
            - _latest_checksum.rc == 0
            - _latest_checksum.checksum is defined
            - _latest_checksum.checksum | string | length > 0

    - name: download nginx_exporter binary archive
      become: false
      delegate_to: "{{ nginx_exporter_delegate_to }}"
      run_once: "{{ 'false' if nginx_exporter_direct_download else 'true' }}"
      ansible.builtin.get_url:
        url: "{{ nginx_exporter_release.download_url }}/download/v{{ nginx_exporter_version }}/{{ nginx_exporter_release.file }}"
        dest: "{{ nginx_exporter_local_tmp_directory }}/{{ nginx_exporter_release.file }}"
        checksum: "{{ __nginx_exporter_checksum | default(omit) }}"
        mode: 0640
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      check_mode: false

  rescue:
    - name: delete download directory
      become: false
      delegate_to: "{{ nginx_exporter_delegate_to }}"
      run_once: "{{ 'false' if nginx_exporter_direct_download else 'true' }}"
      ansible.builtin.file:
        path: "{{ nginx_exporter_local_tmp_directory }}"
        state: absent

    - name: exit with fail
      ansible.builtin.fail:
        msg: A serious error occurred when downloading the archive.

- name: detect extracted binary
  become: false
  delegate_to: "{{ nginx_exporter_delegate_to }}"
  run_once: "{{ 'false' if nginx_exporter_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ nginx_exporter_local_tmp_directory }}/nginx-prometheus-exporter"
  register: stat_nginx_exporter_binary

- name: extract prometheus archive
  become: false
  delegate_to: "{{ nginx_exporter_delegate_to }}"
  run_once: "{{ 'false' if nginx_exporter_direct_download else 'true' }}"
  ansible.builtin.unarchive:
    src: "{{ nginx_exporter_local_tmp_directory }}/{{ nginx_exporter_release.file }}"
    dest: "{{ nginx_exporter_local_tmp_directory }}/"
    copy: false
    #extra_opts:
    #  - --strip-components=1
  when:
    - stat_nginx_exporter_binary.stat is defined
    - not stat_nginx_exporter_binary.stat.exists | default('false')

...
