---

- name: user and group handling
  when:
    - nginx_exporter_system_user != "root"
  block:
    - name: create nginx_exporter group
      ansible.builtin.group:
        name: "{{ nginx_exporter_system_group }}"
        state: present
        system: true

    - name: create nginx_exporter user
      ansible.builtin.user:
        name: "{{ nginx_exporter_system_user }}"
        groups: "{{ nginx_exporter_system_group }}"
        append: true
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: /nonexistent

- name: create install directory
  ansible.builtin.file:
    path: "{{ nginx_exporter_install_path }}"
    state: directory
    owner: "{{ nginx_exporter_system_user }}"
    group: "{{ nginx_exporter_system_group }}"
    mode: 0755

- name: detect extracted binary file for nginx_exporter on '{{ nginx_exporter_delegate_to }}'
  become: false
  delegate_to: "{{ nginx_exporter_delegate_to }}"
  run_once: "{{ 'false' if nginx_exporter_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ nginx_exporter_local_tmp_directory }}/nginx-prometheus-exporter"
  register: stat_file_binary

- name: fail when extracted binary are missing
  ansible.builtin.fail:
    msg: "missing extracted binary on ansible controller"
  when:
    - not running_in_check_mode
    - not stat_file_binary.stat.exists

- name: detect installed nginx_exporter binary
  ansible.builtin.stat:
    path: "{{ nginx_exporter_install_path }}/{{ nginx_exporter_release.binary }}"
  register: stat_nginx_exporter_binary

- name: detect activated nginx_exporter binary
  ansible.builtin.stat:
    path: /usr/bin/{{ nginx_exporter_release.binary }}
  register: stat_nginx_exporter_activated

- name: install and activate nginx_exporter
  when:
    - not running_in_check_mode
    - stat_file_binary.stat.exists
    - (stat_nginx_exporter_binary.stat is defined and not stat_nginx_exporter_binary.stat.exists | default('false')) or
      not stat_nginx_exporter_activated.stat | bodsch.prometheus.linked_version(nginx_exporter_install_path, nginx_exporter_version)
  block:
    - name: propagate files
      block:
        - name: propagate nginx_exporter binary
          ansible.builtin.copy:
            src: "{{ nginx_exporter_local_tmp_directory }}/nginx-prometheus-exporter"
            dest: "{{ nginx_exporter_install_path }}/{{ nginx_exporter_release.binary }}"
            mode: 0755
            owner: "{{ nginx_exporter_system_user }}"
            group: "{{ nginx_exporter_system_group }}"
            remote_src: "{{ 'true' if nginx_exporter_direct_download else 'false' }}"

        - name: make files executable
          ansible.builtin.file:
            path: "{{ nginx_exporter_install_path }}/{{ nginx_exporter_release.binary }}"
            mode: 0755
            owner: "{{ nginx_exporter_system_user }}"
            group: "{{ nginx_exporter_system_group }}"

        - name: create link to binary
          ansible.builtin.file:
            src: "{{ nginx_exporter_install_path }}/{{ nginx_exporter_release.binary }}"
            dest: /usr/bin/{{ nginx_exporter_release.binary }}
            state: link
            force: true
            follow: false
          notify:
            - restart nginx exporter

      rescue:
        - name: delete install directory
          ansible.builtin.file:
            path: "{{ nginx_exporter_install_path }}"
            state: absent

        - name: exit with fail
          ansible.builtin.fail:
            msg: A serious error occurred during the installation of the binary.

- name: systemd
  when:
    - ansible_service_mgr | lower == "systemd"
    - not running_in_check_mode
  block:
    - name: create nginx_exporter run configuration
      ansible.builtin.template:
        src: "default/nginx_exporter.j2"
        dest: "{{ nginx_exporter_defaults_directory }}/nginx_exporter"
        force: true
        owner: root
        group: "{{ nginx_exporter_system_group }}"
        mode: 0640
      notify:
        - restart nginx exporter

    - name: create systemd service unit
      ansible.builtin.template:
        src: "init/systemd/nginx_exporter.service.j2"
        dest: "{{ systemd_lib_directory }}/nginx_exporter.service"
        owner: root
        group: root
        mode: 0644
      notify:
        - daemon-reload
        - restart nginx exporter

- name: openrc
  when:
    - ansible_service_mgr | lower == "openrc"
    - not running_in_check_mode
  block:
    - name: create openrc service configuration
      ansible.builtin.template:
        src: "init/openrc/conf.d/nginx_exporter.j2"
        dest: "/etc/conf.d/nginx_exporter"
        owner: root
        group: root
        mode: 0644

    - name: create openrc init configuration
      ansible.builtin.template:
        src: "init/openrc/init.d/nginx_exporter.j2"
        dest: "/etc/init.d/nginx_exporter"
        owner: root
        group: root
        mode: 0750

- name: create custom fact file
  when:
    - not running_in_check_mode
  bodsch.core.facts:
    name: nginx_exporter
    facts:
      version: "{{ nginx_exporter_version }}"
