---

bind_exporter_service:
  log:
    level: warn

bind_exporter_config:
  - name: example_global_value
    help: Example of a top-level global value scrape in the json
    path: "{ .counter }"
    labels:
      environment: beta                   # static label
      location: "planet-{.location}"      # dynamic label

  - name: mgob_backup
    help: MongoDB Backup
    type: object
    path: "{}"
    labels:
      environment: DEV                    # static label
      id: '{[].plan}'                     # dynamic label
    values:
      next_run: "{[].next_run}"
      last_run: "{[].last_run}"
      last_run_status: "{[].last_run_status}"

bind_exporter_modules:

  jellyfin:
    headers:
      Authorization: MediaBrowser Token=xxxxxxxxxxxxxxxxx
      Content-Type: application/json
      accept: application/json

    metrics:
      - name: jellyfin
        type: object
        help: User playback metrics from Jellyfin
        path: '{ [*] }'
        labels:
          user_name: '{ .UserName }'
          # User PromQL label_join and label_replace to concatenate
          # these values into a nice item description
          item_type: '{ .NowPlayingItem.Type }'
          item_name: '{ .NowPlayingItem.Name }'
          item_path: '{ .NowPlayingItem.Path }'
          series_name: '{ .NowPlayingItem.SeriesName }'
          episode_index: 'e{ .NowPlayingItem.IndexNumber }'
          season_index: 's{ .NowPlayingItem.ParentIndexNumber }'
          client_name: '{ .Client }'
          device_name: '{ .DeviceName }'
        values:
          is_paused: '{ .PlayState.IsPaused }'

  # original examples from
  # https://github.com/prometheus-community/bind_exporter/blob/master/examples/config.yml
  animals:
    metrics:
      - name: animal
        type: object
        help: Example of top-level lists in a separate module
        path: '{ [*] }'
        labels:
          name: '{ .noun }'
          predator: '{ .predator }'
        values:
          population: '{ .population }'
    http_client_config:
      tls_config:
        insecure_skip_verify: true
      basic_auth:
        username: myuser
        password: veryverysecret
        # password_file: /tmp/mysecret.txt
    valid_status_codes:
      - 200
      - 204
    body:
      content: !unsafe
        '{"time_diff": "{{ duration `95` }}","anotherVar": "{{ .myVal | first }}"}'
      templatize: true

...
