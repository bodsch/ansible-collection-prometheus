---
- name: user and group handling
  when:
    - alertmanager_system_user != "root"
  block:
    - name: create alertmanager group
      ansible.builtin.group:
        name: "{{ alertmanager_system_group }}"
        state: present
        system: true

    - name: create alertmanager user
      ansible.builtin.user:
        name: "{{ alertmanager_system_user }}"
        groups: "{{ alertmanager_system_group }}"
        append: true
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: /nonexistent

- name: create install directory
  ansible.builtin.file:
    path: "{{ alertmanager_install_path }}"
    state: directory
    owner: "{{ alertmanager_system_user }}"
    group: "{{ alertmanager_system_group }}"
    mode: 0755

- name: detect extracted binary file for alertmanager on '{{ alertmanager_delegate_to }}'
  become: false
  delegate_to: "{{ alertmanager_delegate_to }}"
  run_once: "{{ 'false' if alertmanager_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ alertmanager_local_tmp_directory }}/alertmanager-{{ alertmanager_version }}.{{ ansible_facts.system | lower }}-{{ system_architecture }}/alertmanager"
  register: stat_file_binary

- name: fail when extracted binary are missing
  ansible.builtin.fail:
    msg: "missing extracted binary on ansible controller"
  when:
    - not stat_file_binary.stat.exists

- name: detect installed alertmanager binary
  ansible.builtin.stat:
    path: "{{ alertmanager_install_path }}/{{ alertmanager_release.binary }}"
  register: stat_alertmanager_binary

- name: detect activated alertmanager binary
  ansible.builtin.stat:
    path: /usr/bin/{{ alertmanager_release.binary }}
  register: stat_alertmanager_activated

- name: install and activate alertmanager
  when:
    - (stat_alertmanager_binary.stat is defined and not stat_alertmanager_binary.stat.exists | default('false')) or
      not stat_alertmanager_activated.stat | bodsch.prometheus.linked_version(alertmanager_install_path, alertmanager_version)
  block:
    - name: propagate files
      block:
        - name: propagate alertmanager binaries
          ansible.builtin.copy:
            src: "{{ alertmanager_local_tmp_directory }}/alertmanager-{{ alertmanager_version }}.{{ ansible_facts.system | lower }}-{{ system_architecture }}/{{ item }}"
            dest: "{{ alertmanager_install_path }}/{{ item }}"
            mode: 0755
            owner: "{{ alertmanager_system_user }}"
            group: "{{ alertmanager_system_group }}"
            remote_src: "{{ 'true' if alertmanager_direct_download else 'false' }}"
          loop:
            - "{{ alertmanager_release.binary }}"
            - amtool

        - name: make files executable
          ansible.builtin.file:
            path: "{{ alertmanager_install_path }}/{{ item }}"
            mode: 0755
            owner: "{{ alertmanager_system_user }}"
            group: "{{ alertmanager_system_group }}"
          loop:
            - "{{ alertmanager_release.binary }}"
            - amtool

        - name: create link to binary
          ansible.builtin.file:
            src: "{{ alertmanager_install_path }}/{{ item }}"
            dest: "/usr/bin/{{ item }}"
            state: link
            force: true
            follow: false
          loop:
            - "{{ alertmanager_release.binary }}"
            - amtool
          notify:
            - restart alertmanager

      rescue:
        - name: delete install directory
          ansible.builtin.file:
            path: "{{ alertmanager_install_path }}"
            state: absent

        - name: exit with fail
          ansible.builtin.fail:
            msg: A serious error occurred during the installation of the binary.

- name: create alertmanager data directory
  ansible.builtin.file:
    path: "{{ alertmanager_data_dir }}"
    state: directory
    owner: "{{ alertmanager_system_user }}"
    group: "{{ alertmanager_system_group }}"
    mode: 0755

- name: create alertmanager configuration directory
  ansible.builtin.file:
    path: "{{ alertmanager_config_dir }}"
    state: directory
    owner: root
    group: "{{ alertmanager_system_group }}"
    mode: 0770

- name: create amtool configuration directory
  ansible.builtin.file:
    path: "{{ alertmanager_amtool.config_dir }}"
    state: directory
    owner: root
    group: "{{ alertmanager_system_group }}"
    mode: 0770

- name: create alertmanager templates directory
  ansible.builtin.file:
    path: "{{ item | dirname }}"
    state: directory
    owner: root
    group: "{{ alertmanager_system_group }}"
    mode: 0770
  loop: "{{ alertmanager_templates }}"
  loop_control:
    label: "{{ item | dirname }}"

- name: systemd
  when:
    - ansible_service_mgr | lower == "systemd"
  block:
    - name: create alertmanager run configuration
      ansible.builtin.template:
        src: "alertmanager.j2"
        dest: "{{ alertmanager_defaults_directory }}/alertmanager"
        force: true
        owner: root
        group: "{{ alertmanager_system_group }}"
        mode: 0640
      notify:
        - reload alertmanager

    - name: create systemd service unit
      ansible.builtin.template:
        src: "init/systemd/alertmanager.service.j2"
        dest: "{{ systemd_lib_directory }}/alertmanager.service"
        owner: root
        group: root
        mode: 0644
      notify:
        - daemon-reload

- name: openrc
  when:
    - ansible_service_mgr | lower == "openrc"
  block:
    - name: create openrc service configuration
      ansible.builtin.template:
        src: "init/openrc/conf.d/alertmanager.j2"
        dest: "/etc/conf.d/alertmanager"
        owner: root
        group: root
        mode: 0644

    - name: create openrc init configuration
      ansible.builtin.template:
        src: "init/openrc/init.d/alertmanager.j2"
        dest: "/etc/init.d/alertmanager"
        owner: root
        group: root
        mode: 0750

- name: create custom fact file
  bodsch.core.facts:
    name: alertmanager
    facts:
      version: "{{ alertmanager_version }}"

...
