---

- name: systemd
  when:
    - ansible_service_mgr | lower == "systemd"
  block:
    - name: create alertmanager run configuration
      ansible.builtin.template:
        src: "alertmanager.j2"
        dest: "{{ alertmanager_defaults_directory }}/alertmanager"
        force: true
        owner: root
        group: "{{ alertmanager_system_group }}"
        mode: 0640
      notify:
        - reload alertmanager

    - name: create systemd service unit
      ansible.builtin.template:
        src: "init/systemd/alertmanager.service.j2"
        dest: "{{ systemd_lib_directory }}/alertmanager.service"
        owner: root
        group: root
        mode: 0644
      notify:
        - daemon-reload

- name: openrc
  when:
    - ansible_service_mgr | lower == "openrc"
  block:
    - name: create openrc service configuration
      ansible.builtin.template:
        src: "init/openrc/conf.d/alertmanager.j2"
        dest: "/etc/conf.d/alertmanager"
        owner: root
        group: root
        mode: 0644

    - name: create openrc init configuration
      ansible.builtin.template:
        src: "init/openrc/init.d/alertmanager.j2"
        dest: "/etc/init.d/alertmanager"
        owner: root
        group: root
        mode: 0750

- name: detect alertmanager templates
  ansible.builtin.set_fact:
    _alertmanager_templates: "{{ lookup('bodsch.core.file_glob', '.tmpl').split(',') }}"
  vars:
    search_path:
      - ".."
      - "../.."

- name: copy alertmanager templates
  become: true
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ alertmanager_config_dir }}/templates/"
    owner: root
    group: "{{ alertmanager_system_group }}"
    mode: 0640
  loop: "{{ _alertmanager_templates }}"
  loop_control:
    label: "{{ item | basename }}"

- name: remove unused templates
  bodsch.prometheus.alertmanager_templates:
    templates_directory: "{{ alertmanager_config_dir }}/templates"
    templates: "{{ _alertmanager_templates }}"

- name: create amtool config
  ansible.builtin.template:
    force: true
    src: alertmanager/amtool.yml.j2
    dest: "{{ alertmanager_amtool.config_dir }}/config.yml"
    owner: alertmanager
    group: "{{ alertmanager_system_group }}"
    mode: 0640

- name: create alertmanager.yml
  ansible.builtin.template:
    force: true
    src: alertmanager/alertmanager.yml.j2
    dest: "{{ alertmanager_config_dir }}/alertmanager.yml"
    owner: root
    group: "{{ alertmanager_system_group }}"
    mode: 0640
  register: alertmanger_config
  notify:
    - validate config

- name: restart alertmanager if needed
  ansible.builtin.meta: flush_handlers

...
