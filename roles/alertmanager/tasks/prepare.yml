---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        # artixlinux
        - "{{ ansible_os_family | lower | replace(' ', '') }}.yml"
        - default.yaml
      skip: true

- name: define delegate instance for download handling
  ansible.builtin.set_fact:
    alertmanager_delegate_to: "{{ ansible_host }}"
    alertmanager_local_tmp_directory: "{{
        lookup('env', 'CUSTOM_LOCAL_TMP_DIRECTORY') |
        default('/var/cache/ansible/alertmanager', true) }}/{{ alertmanager_version }}"
  when:
    - alertmanager_direct_download

- name: install dependency
  ansible.builtin.package:
    name: "{{ alertmanager_requirements }}"
    state: present
  when:
    - alertmanager_requirements | default([]) | count > 0

- name: get latest release
  delegate_to: localhost
  become: false
  run_once: true
  when:
    - alertmanager_version == "latest"
  block:
    - name: get latest release
      delegate_to: localhost
      become: false
      run_once: true
      bodsch.scm.github_latest:
        project: prometheus
        repository: alertmanager
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      register: _latest_release

    - name: re-define alertmanager_version
      ansible.builtin.set_fact:
        alertmanager_version: "{{ _latest_release.latest_release }}"

- name: detect our installation path '{{ alertmanager_install_path | dirname }}'
  ansible.builtin.stat:
    path: "{{ alertmanager_install_path | dirname }}"
    get_checksum: false
  register: stat_alertmanager_path
  ignore_errors: true

- name: old installation
  when:
    - stat_alertmanager_path is defined
    - stat_alertmanager_path.stat is defined
    - stat_alertmanager_path.stat.isdir is defined
    - not stat_alertmanager_path.stat.isdir
  block:
    - name: stop old service
      ansible.builtin.service:
        name: prometheus
        state: stopped
        enabled: false
      notify:
        - daemon-reload

    - name: remove installed systemd unit
      ansible.builtin.file:
        state: absent
        path: /etc/systemd/system/alertmanager.service
      when:
        - ansible_service_mgr | lower == "systemd"

    - name: remove installed alertmanager
      ansible.builtin.file:
        state: absent
        path: "{{ stat_alertmanager_path.stat.path }}"

- name: flush handlers
  ansible.builtin.meta: flush_handlers

- name: detect installed alertmanager binary
  ansible.builtin.stat:
    path: "{{ alertmanager_install_path }}/alertmanager"
  register: stat_alertmanager_binary

- name: create download directory
  become: false
  delegate_to: "{{ alertmanager_delegate_to }}"
  ansible.builtin.file:
    path: "{{ alertmanager_local_tmp_directory }}"
    state: directory
    mode: 0750

- name: user and group handling
  when:
    - alertmanager_system_user != "root"
  block:
    - name: create alertmanager group
      ansible.builtin.group:
        name: "{{ alertmanager_system_group }}"
        state: present
        system: true

    - name: create alertmanager user
      ansible.builtin.user:
        name: "{{ alertmanager_system_user }}"
        groups: "{{ alertmanager_system_group }}"
        append: true
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: /nonexistent

- name: create install directory
  ansible.builtin.file:
    path: "{{ alertmanager_install_path }}"
    state: directory
    owner: "{{ alertmanager_system_user }}"
    group: "{{ alertmanager_system_group }}"
    mode: 0755

- name: merge alertmanager configuration between defaults and custom
  ansible.builtin.set_fact:
    alertmanager_service: "{{ alertmanager_defaults_service | combine(alertmanager_service, recursive=True) }}"
    alertmanager_global: "{{ alertmanager_defaults_global | combine(alertmanager_global, recursive=True) }}"
    alertmanager_receivers: "{{ alertmanager_defaults_receivers | combine(alertmanager_receivers, recursive=True) }}"
    alertmanager_routes: "{{ alertmanager_defaults_routes | combine(alertmanager_routes, recursive=True) }}"
    # alertmanager_inhibit_rules: "{{ alertmanager_defaults_inhibit_rules | union(alertmanager_inhibit_rules) }}"
    alertmanager_time_intervals: "{{ alertmanager_defaults_time_intervals | combine(alertmanager_time_intervals, recursive=True) }}"

- name: merge amtool configuration between defaults and custom
  ansible.builtin.set_fact:
    alertmanager_amtool: "{{ alertmanager_defaults_amtool | combine(alertmanager_amtool, recursive=True) }}"

...
