---

- name: detect binary file for blackbox_exporter
  become: false
  delegate_to: "{{ blackbox_exporter_delegate_to }}"
  run_once: "{{ 'false' if blackbox_exporter_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ blackbox_exporter_local_tmp_directory }}/blackbox_exporter"
  register: stat_file_binary

- name: install blackbox_exporter
  when:
    - stat_file_binary.stat.exists
  block:
    - name: propagate blackbox_exporter binary
      ansible.builtin.copy:
        src: "{{ blackbox_exporter_local_tmp_directory }}/blackbox_exporter"
        dest: "{{ blackbox_exporter_install_path }}/blackbox_exporter"
        mode: 0755
        owner: "{{ blackbox_exporter_system_user }}"
        group: "{{ blackbox_exporter_system_group }}"
        remote_src: "{{ 'true' if blackbox_exporter_direct_download else 'false' }}"

    - name: make files executable
      ansible.builtin.file:
        path: "{{ blackbox_exporter_install_path }}/blackbox_exporter"
        mode: 0755
        owner: "{{ blackbox_exporter_system_user }}"
        group: "{{ blackbox_exporter_system_group }}"

    - name: ensure blackbox exporter binary has cap_net_raw capability
      capabilities:
        path: "{{ blackbox_exporter_install_path }}/blackbox_exporter"
        capability: cap_net_raw+ep
        state: present
      when:
        - not ansible_check_mode

  rescue:
    - name: exit with fail
      ansible.builtin.fail:
        msg: "The binary blackbox_exporter was not found!"

- name: create custom fact file
  bodsch.core.facts:
    name: blackbox_exporter
    facts:
      version: "{{ blackbox_exporter_version }}"

- name: create link to binary
  ansible.builtin.file:
    src: "{{ blackbox_exporter_install_path }}/blackbox_exporter"
    dest: /usr/bin/blackbox_exporter
    state: link
    force: true
    follow: false
  notify:
    - restart blackbox exporter

- name: create blackbox_exporter run configuration
  ansible.builtin.template:
    src: "default/blackbox_exporter.j2"
    dest: "{{ blackbox_exporter_defaults_directory }}/blackbox_exporter"
    force: true
    owner: root
    group: "{{ blackbox_exporter_system_group }}"
    mode: 0644
  notify:
    - restart blackbox exporter

- name: systemd
  when:
    - ansible_service_mgr | lower == "systemd"
  block:
    - name: create systemd service unit
      ansible.builtin.template:
        src: "init/systemd/blackbox_exporter.service.j2"
        dest: "{{ systemd_lib_directory }}/blackbox_exporter.service"
        owner: root
        group: root
        mode: 0644
      notify:
        - daemon-reload
        - restart blackbox exporter

...
