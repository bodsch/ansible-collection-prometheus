---

- name: merge prometheus configuration between defaults and custom
  ansible.builtin.set_fact:
    # prometheus_service: "{{ prometheus_defaults_service | combine(prometheus_service, recursive=True) }}"
    prometheus_global: "{{ prometheus_defaults_global | combine(prometheus_global, recursive=True) }}"
    prometheus_alerting: "{{ prometheus_defaults_alerting | combine(prometheus_alerting, recursive=True) }}"
    prometheus_remote_write: "{{ prometheus_defaults_remote_write | union(prometheus_remote_write) }}"
    prometheus_remote_read: "{{ prometheus_defaults_remote_read | union(prometheus_remote_read) }}"
    prometheus_storage: "{{ prometheus_defaults_storage | combine(prometheus_storage, recursive=True) }}"
    prometheus_tracing: "{{ prometheus_defaults_tracing | combine(prometheus_tracing, recursive=True) }}"
    prometheus_rule_files: "{{ prometheus_defaults_rule_files | union(prometheus_rule_files) }}"
    prometheus_scrape_configs: "{{ prometheus_defaults_scrape_configs | union(prometheus_scrape_configs) }}"

- name: create static targets
  ansible.builtin.template:
    src: prometheus/file_sd/item.yml.j2
    dest: "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml"
    force: true
    owner: root
    group: "{{ prometheus_system_group }}"
    mode: 0640
  with_dict: "{{ prometheus_file_sd_targets }}"
  loop_control:
    label: "{{ item.key }}.yml"
  when:
    - not running_in_check_mode
    - prometheus_file_sd_targets is defined
    - prometheus_file_sd_targets | count > 0
  notify:
    - validate prometheus config
    - reload prometheus

- name: create alerting rules
  bodsch.prometheus.prometheus_alert_rules:
    rules: "{{ prometheus_alert_rules | bodsch.prometheus.jinja_encode }}"
    group: "{{ prometheus_system_group }}"
  register: _created_alert_rules
  when:
    - not running_in_check_mode
    - prometheus_alert_rules is defined
    - prometheus_alert_rules | count > 0
  notify:
    - summary of changes or failed
    - validate prometheus config
    - reload prometheus

- name: create prometheus.yml
  ansible.builtin.template:
    src: prometheus/prometheus.yml.j2
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    force: true
    owner: root
    group: "{{ prometheus_system_group }}"
    mode: 0640
  register: prometheus_config
  notify:
    - validate prometheus config
    - reload prometheus

- name: create (experimental) prometheus web configuration
  ansible.builtin.template:
    src: prometheus/web.yml.j2
    dest: "{{ prometheus_config_dir }}/web.yml"
    force: true
    owner: root
    group: "{{ prometheus_system_group }}"
    mode: 0640
  when:
    - prometheus_enable_experimental
  notify:
    - reload prometheus

- name: restart prometheus if needed
  ansible.builtin.meta: flush_handlers

...
